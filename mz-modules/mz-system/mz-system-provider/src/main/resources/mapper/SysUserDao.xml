<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mz.system.provider.dao.SysUserDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.mz.system.model.entity.SysUserEntity" id="sysUserMap">
        <result property="userId" column="user_id"/>
        <result property="deptId" column="dept_id"/>
        <result property="username" column="username"/>
        <result property="nickName" column="nick_name"/>
        <result property="userType" column="user_type"/>
        <result property="email" column="email"/>
        <result property="phonenumber" column="phonenumber"/>
        <result property="sex" column="sex"/>
        <result property="avatar" column="avatar"/>
        <result property="password" column="password"/>
        <result property="status" column="STATUS"/>
        <result property="delFlag" column="del_flag"/>
        <result property="loginIp" column="login_ip"/>
        <result property="loginDate" column="login_date"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="remark" column="remark"/>
    </resultMap>

    <sql id = "fromHead">
        su.`user_id`,su.`dept_id`,su.`username`,su.`nick_name`,su.`user_type`,su.`email`,su.`phonenumber`,su.`sex`,su.`avatar`,su.`status`,su.`del_flag`,su.`login_ip`,su.`login_date`,su.`create_by`,su.`create_time`,su.`update_by`,su.`update_time`,su.`remark`
    </sql>

    <resultMap type="com.mz.system.model.dto.SysUserDto" id="sysUserDtoMap">
        <result property="userId" column="user_id"/>
        <result property="deptId" column="dept_id"/>
        <result property = "deptName" column = "dept_name"/>
        <result property="username" column="username"/>
        <result property="nickName" column="nick_name"/>
        <result property="userType" column="user_type"/>
        <result property="email" column="email"/>
        <result property="phonenumber" column="phonenumber"/>
        <result property="sex" column="sex"/>
        <result property="avatar" column="avatar"/>
        <result property="password" column="password"/>
        <result property="status" column="STATUS"/>
        <result property="delFlag" column="del_flag"/>
        <result property="loginIp" column="login_ip"/>
        <result property="loginDate" column="login_date"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="remark" column="remark"/>
        <result property = "ifAdmin" column = "if_admin"/>
        <result property = "rolePermission" column = "role_keys"/>
        <result property = "dataScopes" column = "data_scopes"/>
        <result property = "postIds" column = "post_ids"/>
        <result property = "postNames" column = "post_names"/>
        <result property = "roleIds" column = "role_ids"/>
        <collection property = "authorities" column="user_id" ofType="java.lang.String" select="com.mz.system.provider.dao.SysMenuDao.getAuthorities">
            <constructor>
                <arg column="perms"/>
            </constructor>
        </collection>
    </resultMap>
    <!--根据用户名查询当前用户-->
    <select id = "loadUserByUserName" resultMap="sysUserDtoMap">
        select
            <include refid = "fromHead"/>,
            su.password,
            sd.dept_name,
            group_concat(sr.data_scope) as data_scopes,
            group_concat(sr.role_id) as role_ids,
            group_concat(sr.role_key) as role_keys,
            find_in_set('admin', group_concat(sr.role_key)) as if_admin,
            group_concat(sp.post_id) as post_ids,
            group_concat(sp.post_name) as post_names
        from sys_user su
        left join sys_dept sd on sd.dept_id = su.dept_id
        left join sys_user_role sur on sur.user_id = su.user_id
        left join sys_user_post sup on sup.user_id = su.user_id
        left join sys_role sr on sr.role_id = sur.role_id and sr.del_flag = 0
        left join sys_post sp on sp.post_id = sup.post_id
        where su.username = #{username}
          and sr.status = 0
          and su.del_flag = 0
        group by sur.user_id,sup.user_id
    </select>

    <select id = "selectPageUser" resultType = "com.mz.system.model.vo.SysUserVo">
        select
            <include refid = "fromHead"/>,
            sd.dept_name
        from sys_user su
        left join sys_dept sd on su.dept_id = sd.dept_id
        <where>
            <if test = "userVo.username != null and userVo.username != ''">
                and su.username = #{userVo.username}
            </if>
            <if test = "userVo.phonenumber != null and userVo.phonenumber != ''">
                and su.phonenumber = #{userVo.phonenumber}
            </if>
            <if test = "userVo.status != null and userVo.status != 0">
                and su.status = #{userVo.status}
            </if>
            <if test = "userVo.deptId != null and userVo.deptId != 0">
                and (su.dept_id = #{userVo.deptId} or su.dept_id in ( select t.dept_id from sys_dept t where find_in_set(#{userVo.deptId}, t.ancestors) ))
            </if>
            and su.del_flag='0'
        </where>
        order by su.`create_time`
    </select>

    <resultMap type="com.mz.system.model.vo.SysUserVo" id="sysUserVoMap" extends="sysUserMap">
        <collection property = "postIds" column = "user_id" ofType = "Long" select = "com.mz.system.provider.dao.SysUserPostDao.getPostIdsByUserId"/>
        <collection property = "roleIds" column = "user_id" ofType = "Long" select = "com.mz.system.provider.dao.SysUserRoleDao.getRoleIdsByUserId"/>
    </resultMap>


    <update id = "updateLoginLog">
        update sys_user su
        <set>
            <if test = "sysUserLog.loginIp != null and sysUserLog.loginIp != ''">
                su.login_ip = #{sysUserLog.loginIp},
            </if>
            <if test = "sysUserLog.loginDate != null ">
                su.login_date = #{sysUserLog.loginDate},
            </if>
        </set>
        where su.user_id = #{sysUserLog.userId}
    </update>


</mapper>