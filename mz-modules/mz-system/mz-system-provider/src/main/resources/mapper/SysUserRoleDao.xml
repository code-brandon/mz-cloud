<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace = "com.mz.system.provider.dao.SysUserRoleDao">

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type = "com.mz.system.model.entity.SysUserRoleEntity" id = "sysUserRoleMap">
        <result property = "userId" column = "user_id"/>
        <result property = "roleId" column = "role_id"/>
    </resultMap>

    <!--批量插入 用户和角色关联-->
    <insert id = "insertUserRoles">
        insert into `sys_user_role` (`user_id`,`role_id`)
        values
        <foreach collection = "userRoles" separator = "," item = "item">
            (#{item.userId},#{item.roleId})
        </foreach>
    </insert>

    <!--按角色ID和用户ID删除-->
    <delete id = "deleteByRoleIdAndUserIds">
        delete from sys_user_role where `role_id` = #{userByRole.roleId} and `user_id` in
        <foreach collection = "userByRole.userIds" open = "(" close = ")" separator = "," item = "item">
            #{item}
        </foreach>
    </delete>

    <!--根据用ID获取角色ID集合-->
    <select id = "selectRoleIdsByUserId" resultType = "java.lang.Long">
        select `role_id`
        from `sys_user_role`
        where `user_id` = #{userId}
    </select>

    <!--根据用ID获取角色ID字符串集合-->
    <select id = "selectStrRoleIdsByUserId" resultType = "java.lang.String">
        select group_concat(`role_id`) as role_ids
        from `sys_user_role`
        where `user_id` = #{userId}
    </select>

    <!--根据角色ID查询用户分页数据-->
    <select id = "selectUserPageByRoleId" resultType = "com.mz.system.model.vo.SysUserVo">
        select
        <include refid = "com.mz.system.provider.dao.SysUserDao.fromHead"/>
        from sys_user as su
        left join sys_user_role sur on sur.user_id = su.user_id
        <where>
            sur.`role_id` = #{userByRole.roleId}
            <if test = "userByRole.username != null and userByRole.username != ''">
                and su.`username` = #{userByRole.username}
            </if>
            <if test = "userByRole.nickName != null and userByRole.nickName != ''">
                and su.`nick_name` = #{userByRole.nickName}
            </if>
            <if test = "userByRole.phonenumber != null and userByRole.phonenumber != ''">
                and su.`phonenumber` = #{userByRole.phonenumber}
            </if>
            <if test = "userByRole.status != null and userByRole.status.toString() != ''">
                and su.`status` = #{userByRole.status}
            </if>
        </where>
        order by su.`create_time`
    </select>

    <!--根据角色ID查询不是此角色用户分页数据-->
    <select id = "selectNotThisRoleUserPage" resultType = "com.mz.system.model.vo.SysUserVo">
        select
        <include refid = "com.mz.system.provider.dao.SysUserDao.fromHead"/>
        from sys_user su
        left join sys_user_role sur on sur.user_id = su.user_id
        <where>
            su.`del_flag` = 0
            <if test = "userByRole.username != null and userByRole.username != ''">
                and su.`username` = #{userByRole.username}
            </if>
            <if test = "userByRole.nickName != null and userByRole.nickName != ''">
                and su.`nick_name` = #{userByRole.nickName}
            </if>
            <if test = "userByRole.phonenumber != null and userByRole.phonenumber != ''">
                and su.`phonenumber` = #{userByRole.phonenumber}
            </if>
            <if test = "userByRole.status != null and userByRole.status.toString() != ''">
                and su.`status` = #{userByRole.status}
            </if>
            and not exists (
                select
                    tmp_sur.`user_id`
                from sys_user_role tmp_sur
                where tmp_sur.`role_id` = #{userByRole.roleId} and tmp_sur.user_id = su.user_id
            )
        </where>
        order by su.`create_time`
    </select>


</mapper>